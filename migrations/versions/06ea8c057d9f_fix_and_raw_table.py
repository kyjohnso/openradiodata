"""fix and raw table

Revision ID: 06ea8c057d9f
Revises: 
Create Date: 2021-03-10 11:47:46.739398

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '06ea8c057d9f'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('fix',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('raw',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('Manufacturer', sa.String(length=80), nullable=True),
    sa.Column('Model', sa.String(length=80), nullable=True),
    sa.Column('UploadDateTime', sa.DateTime(), nullable=True),
    sa.Column('MeasurementDateTime', sa.DateTime(), nullable=True),
    sa.Column('ElapsedRealtimeMillis', sa.Integer(), nullable=True),
    sa.Column('TimeNanos', sa.BigInteger(), nullable=True),
    sa.Column('LeapSecond', sa.Integer(), nullable=True),
    sa.Column('TimeUncertaintyNanos', sa.Integer(), nullable=True),
    sa.Column('FullBiasNanos', sa.BigInteger(), nullable=True),
    sa.Column('BiasNanos', sa.Float(), nullable=True),
    sa.Column('BiasUncertaintyNanos', sa.Float(), nullable=True),
    sa.Column('DriftNanosPerSecond', sa.Float(), nullable=True),
    sa.Column('DriftUncertaintyNanosPerSecond', sa.Float(), nullable=True),
    sa.Column('HardwareClockDiscontinuityCount', sa.Float(), nullable=True),
    sa.Column('Svid', sa.SmallInteger(), nullable=True),
    sa.Column('TimeOffsetNanos', sa.Float(), nullable=True),
    sa.Column('State', sa.Integer(), nullable=True),
    sa.Column('ReceivedSvTimeNanos', sa.BigInteger(), nullable=True),
    sa.Column('ReceivedSvTimeUncertaintyNanos', sa.Float(), nullable=True),
    sa.Column('Cn0DbHz', sa.Float(), nullable=True),
    sa.Column('PseudorangeRateMetersPerSecond', sa.Float(), nullable=True),
    sa.Column('PseudorangeRateUncertaintyMetersPerSecond', sa.Float(), nullable=True),
    sa.Column('AccumulatedDeltaRangeState', sa.Float(), nullable=True),
    sa.Column('AccumulatedDeltaRangeMeters', sa.Float(), nullable=True),
    sa.Column('AccumulatedDeltaRangeUncertaintyMeters', sa.Float(), nullable=True),
    sa.Column('CarrierFrequencyHz', sa.Float(), nullable=True),
    sa.Column('CarrierCycles', sa.Float(), nullable=True),
    sa.Column('CarrierPhase', sa.Float(), nullable=True),
    sa.Column('CarrierPhaseUncertainty', sa.Float(), nullable=True),
    sa.Column('MultipathIndicator', sa.Float(), nullable=True),
    sa.Column('SnrInDb', sa.Float(), nullable=True),
    sa.Column('ConstellationType', sa.SmallInteger(), nullable=True),
    sa.Column('AgcDb', sa.Float(), nullable=True),
    sa.Column('fix_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['fix_id'], ['fix.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_raw_ConstellationType'), 'raw', ['ConstellationType'], unique=False)
    op.create_index(op.f('ix_raw_MeasurementDateTime'), 'raw', ['MeasurementDateTime'], unique=False)
    op.create_index(op.f('ix_raw_ReceivedSvTimeNanos'), 'raw', ['ReceivedSvTimeNanos'], unique=False)
    op.create_index(op.f('ix_raw_Svid'), 'raw', ['Svid'], unique=False)
    op.create_index(op.f('ix_raw_UploadDateTime'), 'raw', ['UploadDateTime'], unique=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_raw_UploadDateTime'), table_name='raw')
    op.drop_index(op.f('ix_raw_Svid'), table_name='raw')
    op.drop_index(op.f('ix_raw_ReceivedSvTimeNanos'), table_name='raw')
    op.drop_index(op.f('ix_raw_MeasurementDateTime'), table_name='raw')
    op.drop_index(op.f('ix_raw_ConstellationType'), table_name='raw')
    op.drop_table('raw')
    op.drop_table('fix')
    # ### end Alembic commands ###
